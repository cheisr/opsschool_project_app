node("linux") {
   def app
   
   stage('Clone repository') {
      git branch: 'master',
      url: 'https://github.com/cheisr/opsschool_project_app.git' 
      checkout scm
   }
   
      stage('Build image') {
       app = sh(script: 'docker build -q -f Dockerfile -t cheisr/opsschool_project_app .', returnStdout: true)
       mysql = sh(script: 'docker build -q -f Dockerfile-mysql -t cheisr/opsschool_project_mysql .', returnStdout: true)
   }
   
   
   
   stage('docker-compose') {
         sh '''
         docker-compose up -d
         '''
         }
   
   stage('Test container') {
       response = sh(script: "sleep 10; curl 127.0.0.1:8181", returnStdout: true)
   }
   
    stage('docker-compose') {
         sh '''
         docker-compose down
         '''
         }

   stage('Push image') {
       withDockerRegistry(registry:[
               url: '',
               credentialsId: 'dockerhub'
               ]){
           sh(script: 'docker push cheisr/opsschool_project_app', returnStdout: true)
           sh(script: 'docker push cheisr/opsschool_project_mysql', returnStdout: true)
       }
   }

   stage('Deploy') {
    sh ''' 
    aws eks --region us-east-1 update-kubeconfig --name opsschool_eks_cheisr    
    kubectl apply -f k8s_deployment.yml
    kubectl apply -f K8s_deployment_mysql.yml
    kubectl apply -f K8s_ LB_mysql.yml
    kubectl apply -f K8s_LB.yml
    sleep 20s
    kubectl get svc -o wide
    '''
   }
}
